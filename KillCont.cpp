/*=============================================================================

		�E�F�[�u[ Wave.cpp ]

-------------------------------------------------------------------------------

	���@�쐬��
		2017/08/30
------------------------------------------------------------------------------- 
	���@�X�V��
		2017/08/30
=============================================================================*/

/*-----------------------------------------------------------------------------
	�w�b�_�t�@�C��
-----------------------------------------------------------------------------*/
#include "DirectX.h"
#include "TextureManager.h"
#include "Scene.h"
#include "Number2D.h"
#include "KillCont.h"

/*-----------------------------------------------------------------------------
	�}�N����`
-----------------------------------------------------------------------------*/
#define TEX_ID CTextureManager::TEX_NUMBER

/*-----------------------------------------------------------------------------
 �֐���:	CKillCount* CKillCount::Create(D3DXVECTOR2 pos, D3DXVECTOR2 size)
 ����:		D3DXVECTOR2 pos		���W
			D3DXVECTOR2 size	�傫��
 �߂�l:	
 ����:		����
-----------------------------------------------------------------------------*/
CKillCount* CKillCount::Create(D3DXVECTOR2 pos, D3DXVECTOR2 size)
{
	CKillCount* wave;

	wave = new CKillCount(3);

	wave->m_Pos = pos;

	wave->m_Size = size;

	wave->Init();

	return wave;
}

/*-----------------------------------------------------------------------------
�֐���:		void CKillCount::Init(void)
����:
�߂�l:
����:		������
-----------------------------------------------------------------------------*/
void CKillCount::Init(void)
{
	for (int i = 0; i < 2; i++)
	{
		m_Number[i] = CNumber2D::Create(m_Pos, m_Size, TEX_ID, i);
	}
}

/*-----------------------------------------------------------------------------
�֐���:		void CKillCount::Uninit(void)
����:
�߂�l:
����:		�I��
-----------------------------------------------------------------------------*/
void CKillCount::Uninit(void)
{
	for (int i = 0; i < 2; i++)
	{
		m_Number[i]->Uninit();
		delete m_Number[i];
		m_Number[i] = NULL;
	}

	CScene::Release();	//	�I�u�W�F�N�g���g�̉��
}

/*-----------------------------------------------------------------------------
�֐���:		void CKillCount::Update(void)
����:
�߂�l:
����:		�X�V
-----------------------------------------------------------------------------*/
void CKillCount::Update(void)
{
	int Number;		//	������\������ϐ�
	int TimeValue;	//	�l�̕ێ�

	//	�^�C���̕ێ�
	TimeValue = m_KillCount;

	for (int i = 0; i < 2; i++)
	{
		// �����̐ݒ�
		// �e���̐����̎Z�o
		Number = TimeValue % 10;
		TimeValue /= 10;

		// �e���̐����̒l�ݒ�
		m_Number[i]->SetNumber(Number);

		//	�i���o�[�̍X�V
		m_Number[i]->Update();
	}
}

/*-----------------------------------------------------------------------------
�֐���:		void CKillCount::Draw(void)
����:
�߂�l:
����:		�`��
-----------------------------------------------------------------------------*/
void CKillCount::Draw(void)
{
	for (int i = 0; i < 2; i++)
	{
		m_Number[i]->Draw();
	}
}